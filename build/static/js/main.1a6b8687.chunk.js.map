{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAeeA,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACzB,OACA,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAK,SAASC,IAAG,+BAA2BH,EAA3B,cACtB,gCACA,6BAAKF,IACL,4BAAIC,WCUSK,EAfE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAEhB,OACH,8BAEGA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OAAO,cAAC,EAAD,CAAeR,GAAKK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA7DS,SCORC,EAdC,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC1B,OACH,qBAAKV,UAAY,MAAjB,SAEE,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACTC,SAAUH,OCeFI,EAtBA,SAACC,GACZ,OACQ,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACCJ,EAAMK,YCwCJC,E,kDAxCX,aAAc,IAAD,8BACZ,gBAWDC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAX3C,EAAKC,MAAQ,CACZvB,OAAO,GACJK,YAAY,IAJJ,E,gEAOO,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAO4B,S,+BAM/B,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GACzC,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAElE,OAAgC,IAA5BF,KAAKP,MAAMvB,OAAOkC,OACd,yCAKf,sBAAKtC,UAAU,KAAf,UACA,+CACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAS6B,a,GA/BFM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1a6b8687.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) =>{\n\treturn (\n\t<div className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\n\t\t<img alt =\"robots\" src ={`https://robohash.org/${id}?200x200`}/>\n\t\t<div>\n\t\t<h2>{name}</h2>\n\t\t<p>{email}</p>\n\t\t</div>\n\t</div>\n\t\t);\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) =>{\n   \n   return (\n<div>\n  {\n  \trobots.map((user,i)=>{\n   \treturn <Card key= {i} id ={robots[i].id} name={robots[i].name} email={robots[i].email} />\n   })\n\n  }\n  \n </div>\n   \t)\n}\n\nexport default CardList;","  import React from 'react';\n\nconst SearchBox=({searchfield,searchChange}) =>{\n    return (\n\t<div className = 'pa2'>\n\t    \n   <input \n\t   className=\"pa3 ba b--green bg-lightest-blue\" \n\t   type=\"search\" \n\t   placeholder='search robots' \n       onChange={searchChange}\n   />  \n    </div>\n)}\n\n\nexport default SearchBox;\n","import React from 'react';\n\n\nconst Scroll = (props) => {\n    return (\n            <div style={{overflow:'scroll',border:'5px solid black',height:'500px'}}>\n            {props.children}\n            </div>\n    \t);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Scroll;","import React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n    constructor(){\n    \tsuper();\n    \tthis.state = {\n    \t\trobots:[],\n\t        searchfield:''\n    \t}\n    }\n    componentDidMount(){\n    \tfetch('https://jsonplaceholder.typicode.com/users')\n    \t.then(response => response.json())\n    \t.then(users => this.setState({robots:users}))\n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield:event.target.value})\n        \n    }\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\n        \treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if (this.state.robots.length ===0 ){\n\t  \t     return <h1>Loading</h1> ;\t\n\t  \t}\n\t  \telse {\n\t  return (\n\n\t<div className=\"tc\">\n\t<h1> Robofriends </h1>\n\t<SearchBox searchChange={this.onSearchChange}/>\n\t<Scroll>\n\t<CardList robots={ filteredRobots }/>\n\t</Scroll>\n    </div>\n );\t\n\t}\n\t}\n\t\n}\n\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}